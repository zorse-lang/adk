import { ArmResource, Entity as ADKEntity } from "@zorse/adk";

export class grafana extends ArmResource<grafanaComponentInputs> implements grafanaComponentOutputs {
	constructor(entity: ADKEntity, options: grafanaComponentInputs) {
		super(entity, options.name, "Microsoft.Dashboard/grafana", "2021-09-01-preview", options);
	}
	public readonly apiVersion: "2021-09-01-preview";
	public readonly id: string;
	public readonly type: "Microsoft.Dashboard/grafana";
}
export interface grafanaComponentOutputs {
	readonly apiVersion: "2021-09-01-preview";
	readonly id: string;
	readonly type: "Microsoft.Dashboard/grafana";
}
export interface grafanaComponentInputs {
	readonly identity?: ManagedIdentity | undefined;
	readonly location?: string | undefined;
	readonly name: string;
	readonly properties?: ManagedGrafanaProperties | undefined;
	readonly sku?: ResourceSku | undefined;
	readonly systemData?: SystemData | undefined;
	readonly tags?: ManagedGrafanaTags | undefined;
}
export interface ManagedGrafanaProperties {
	readonly autoGeneratedDomainNameLabelScope?: "TenantReuse" | undefined;
	readonly endpoint?: string | undefined;
	readonly grafanaVersion?: string | undefined;
	readonly provisioningState?:
		| (
				| "Accepted"
				| "Canceled"
				| "Creating"
				| "Deleted"
				| "Deleting"
				| "Failed"
				| "NotSpecified"
				| "Succeeded"
				| "Updating"
		  )
		| undefined;
	readonly zoneRedundancy?: ("Disabled" | "Enabled") | undefined;
}
export interface ManagedGrafanaTags {
	readonly "[ key: string ]"?: string | undefined;
}
export interface ManagedIdentity {
	readonly principalId?: string | undefined;
	readonly tenantId?: string | undefined;
	readonly type?: ("None" | "SystemAssigned") | undefined;
	readonly userAssignedIdentities?: ManagedIdentityUserAssignedIdentities | undefined;
}
export interface ManagedIdentityUserAssignedIdentities {
	readonly "[ key: string ]"?: UserAssignedIdentity | undefined;
}
export interface ResourceSku {
	readonly name: string;
}
export interface SystemData {
	readonly createdAt?: string | undefined;
	readonly createdBy?: string | undefined;
	readonly createdByType?: ("Application" | "Key" | "ManagedIdentity" | "User") | undefined;
	readonly lastModifiedAt?: string | undefined;
	readonly lastModifiedBy?: string | undefined;
	readonly lastModifiedByType?: ("Application" | "Key" | "ManagedIdentity" | "User") | undefined;
}
export interface UserAssignedIdentity {
	readonly clientId?: string | undefined;
	readonly principalId?: string | undefined;
}
export default {
	grafana: grafana,
};
